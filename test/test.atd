(*** GENERATED BY PPX_DERIVING_ATD *** DO NOT EDIT ***)

type u  = {
	x : int ;
}


type x  = {
	?abc : string  option ;
	def : int ;
	~ghi  <ocaml default="false"> <json name="something_else">: bool ;
}


type y  = {
	x : x ;
}


type zz  = {
	z : z ;
	y : y ;
}


type z  <ocaml from="Test2"> = abstract 


type at  = {
	a : t ;
}


type t  <ocaml from="Test2.T"> = abstract 


type az  = {
	b : int ;
}


type poly  = string 


type ('poly) poly_t  = {
	x : 'poly;
	y : poly ;
}


type ('a, 'b) poly_t2  = {
	x : 'a;
	y : 'b;
}


type constrained  = (string , int ) poly_t2 


type ('a) one_constrained  = ('a, int ) poly_t2 


type constrained_again  = (poly ) one_constrained 


type with_attrs  = [
	| Bad_value  <json name="bad_value"> 
	| Good_value  <json name="good_value"> of ( int   ) 
] 
